{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AgentRegistrationRequest",
  "description": "Schema for registering a new agent.",
  "type": "object",
  "properties": {
    "requestType": {
      "type": "string",
      "enum": ["registration"],
      "description": "Type of request: 'registration' to register a new agent."
    },
    "requestingAgent": {
      "type": "object",
      "description": "Information about the agent making the request.",
      "properties": {
        "protocol": {
          "type": "string",
          "enum": ["a2a", "mcp", "acp"],
          "description": "The protocol used by the agent (e.g., a2a, mcp, acp)."
        },
        "agentName": {
          "type": "string",
          "description": "The agent's unique name (e.g., 'bob')."
        },
        "agentCategory": {
          "type": "string",
          "description": "The agent's category (e.g., 'translator')."
        },
        "providerName": {
          "type": "string",
          "description": "The provider of the agent (e.g., 'openai')."
        },
        "version": {
          "type": "string",
          "description": "Version of the request or schema (e.g., '1.0')."
        },
        "extension": {
          "type": "string",
          "description": "The extension for the agent (e.g., 'agent')."
        },
        "agentUseJustification": {
          "type": "string",
          "description": "Justification for the agent's use in this context."
        },
        "agentCapability": {
          "type": "string",
          "description": "The primary capability being requested or advertised (e.g., 'DocumentTranslation')."
        },
        "agentEndpoint": {
          "type": "string",
          "description": "The network endpoint of the agent, constructed as <protocol>://<agent-name>.<agent-category>.<provider-name>.<extension>."
        },
        "agentDID": {
          "type": "string",
          "description": "The Decentralized Identifier (DID) of the agent."
        },
        "certificate": {
          "type": "object",
          "description": "The certificate of the agent",
          "properties": {
            "certificateSubject": { "type": "string" },
            "certificateIssuer": { "type": "string" },
            "certificateSerialNumber": { "type": "string" },
            "certificateValidFrom": { "type": "string", "format": "date-time" },
            "certificateValidTo": { "type": "string", "format": "date-time" },
            "certificatePEM": { "type": "string", "description": "Base64 encoded PEM certificate." },
            "certificatePublicKeyAlgorithm": { "type": "string" },
            "certificateSignatureAlgorithm": { "type": "string" }
          },
          "required": [
            "certificateSubject",
            "certificateIssuer",
            "certificateSerialNumber",
            "certificateValidFrom",
            "certificateValidTo",
            "certificatePEM",
            "certificatePublicKeyAlgorithm",
            "certificateSignatureAlgorithm"
          ]
        },
        "csrPEM": {
          "type": "string",
          "description": "Base64 encoded PEM certificate signing request."
        },
        "agentDNSName": {
          "type": "string",
          "description": "The DNS-like name of the agent (e.g., translator.legal.agentic.ai)."
        }
      },
      "required": [
        "protocol",
        "agentName",
        "agentCategory",
        "providerName",
        "version",
        "agentUseJustification",
        "agentCapability",
        "agentEndpoint",
        "agentDID",
        "certificate",
        "csrPEM",
        "agentDNSName"
      ]
    }
  },
  "required": [
    "requestType",
    "requestingAgent"
  ]
} 